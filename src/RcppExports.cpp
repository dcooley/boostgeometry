// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_wkt_area
Rcpp::NumericVector rcpp_wkt_area(Rcpp::List wkt, const char* strategy);
RcppExport SEXP _boostgeometry_rcpp_wkt_area(SEXP wktSEXP, SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    Rcpp::traits::input_parameter< const char* >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_area(wkt, strategy));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_convex_hull
Rcpp::StringVector rcpp_wkt_convex_hull(Rcpp::List wkt);
RcppExport SEXP _boostgeometry_rcpp_wkt_convex_hull(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_convex_hull(wkt));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_distance_cartesian
Rcpp::NumericMatrix rcpp_wkt_distance_cartesian(Rcpp::List wktFrom, Rcpp::List wktTo);
RcppExport SEXP _boostgeometry_rcpp_wkt_distance_cartesian(SEXP wktFromSEXP, SEXP wktToSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wktFrom(wktFromSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type wktTo(wktToSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_distance_cartesian(wktFrom, wktTo));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_distance_spherical
Rcpp::NumericMatrix rcpp_wkt_distance_spherical(Rcpp::List wktFrom, Rcpp::List wktTo);
RcppExport SEXP _boostgeometry_rcpp_wkt_distance_spherical(SEXP wktFromSEXP, SEXP wktToSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wktFrom(wktFromSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type wktTo(wktToSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_distance_spherical(wktFrom, wktTo));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_distance_geographic
Rcpp::NumericMatrix rcpp_wkt_distance_geographic(Rcpp::List wktFrom, Rcpp::List wktTo);
RcppExport SEXP _boostgeometry_rcpp_wkt_distance_geographic(SEXP wktFromSEXP, SEXP wktToSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wktFrom(wktFromSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type wktTo(wktToSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_distance_geographic(wktFrom, wktTo));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_envelope_cartesian
Rcpp::StringVector rcpp_wkt_envelope_cartesian(Rcpp::List wkt);
RcppExport SEXP _boostgeometry_rcpp_wkt_envelope_cartesian(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_envelope_cartesian(wkt));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_envelope_spherical
Rcpp::StringVector rcpp_wkt_envelope_spherical(Rcpp::List wkt);
RcppExport SEXP _boostgeometry_rcpp_wkt_envelope_spherical(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_envelope_spherical(wkt));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_envelope_geographic
Rcpp::StringVector rcpp_wkt_envelope_geographic(Rcpp::List wkt);
RcppExport SEXP _boostgeometry_rcpp_wkt_envelope_geographic(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_envelope_geographic(wkt));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_equals
Rcpp::LogicalMatrix rcpp_wkt_equals(Rcpp::List x, Rcpp::List y, const char* strategy);
RcppExport SEXP _boostgeometry_rcpp_wkt_equals(SEXP xSEXP, SEXP ySEXP, SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type y(ySEXP);
    Rcpp::traits::input_parameter< const char* >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_equals(x, y, strategy));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_perimeter_cartesian
Rcpp::NumericVector rcpp_wkt_perimeter_cartesian(Rcpp::List wkt);
RcppExport SEXP _boostgeometry_rcpp_wkt_perimeter_cartesian(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_perimeter_cartesian(wkt));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_perimeter_spherical
Rcpp::NumericVector rcpp_wkt_perimeter_spherical(Rcpp::List wkt);
RcppExport SEXP _boostgeometry_rcpp_wkt_perimeter_spherical(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_perimeter_spherical(wkt));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_perimeter_geographic
Rcpp::NumericVector rcpp_wkt_perimeter_geographic(Rcpp::List wkt);
RcppExport SEXP _boostgeometry_rcpp_wkt_perimeter_geographic(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_perimeter_geographic(wkt));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_simplify
Rcpp::StringVector rcpp_wkt_simplify(Rcpp::List wkt, const char* strategy, double distance);
RcppExport SEXP _boostgeometry_rcpp_wkt_simplify(SEXP wktSEXP, SEXP strategySEXP, SEXP distanceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    Rcpp::traits::input_parameter< const char* >::type strategy(strategySEXP);
    Rcpp::traits::input_parameter< double >::type distance(distanceSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_simplify(wkt, strategy, distance));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_unique
Rcpp::StringVector rcpp_wkt_unique(Rcpp::List wkt, const char* strategy);
RcppExport SEXP _boostgeometry_rcpp_wkt_unique(SEXP wktSEXP, SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    Rcpp::traits::input_parameter< const char* >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_unique(wkt, strategy));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_within_cartesian
Rcpp::LogicalMatrix rcpp_wkt_within_cartesian(Rcpp::List x, Rcpp::List y);
RcppExport SEXP _boostgeometry_rcpp_wkt_within_cartesian(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_within_cartesian(x, y));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_within_spherical
Rcpp::LogicalMatrix rcpp_wkt_within_spherical(Rcpp::List x, Rcpp::List y);
RcppExport SEXP _boostgeometry_rcpp_wkt_within_spherical(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_within_spherical(x, y));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_within_geographic
Rcpp::LogicalMatrix rcpp_wkt_within_geographic(Rcpp::List x, Rcpp::List y);
RcppExport SEXP _boostgeometry_rcpp_wkt_within_geographic(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_within_geographic(x, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_boostgeometry_rcpp_wkt_area", (DL_FUNC) &_boostgeometry_rcpp_wkt_area, 2},
    {"_boostgeometry_rcpp_wkt_convex_hull", (DL_FUNC) &_boostgeometry_rcpp_wkt_convex_hull, 1},
    {"_boostgeometry_rcpp_wkt_distance_cartesian", (DL_FUNC) &_boostgeometry_rcpp_wkt_distance_cartesian, 2},
    {"_boostgeometry_rcpp_wkt_distance_spherical", (DL_FUNC) &_boostgeometry_rcpp_wkt_distance_spherical, 2},
    {"_boostgeometry_rcpp_wkt_distance_geographic", (DL_FUNC) &_boostgeometry_rcpp_wkt_distance_geographic, 2},
    {"_boostgeometry_rcpp_wkt_envelope_cartesian", (DL_FUNC) &_boostgeometry_rcpp_wkt_envelope_cartesian, 1},
    {"_boostgeometry_rcpp_wkt_envelope_spherical", (DL_FUNC) &_boostgeometry_rcpp_wkt_envelope_spherical, 1},
    {"_boostgeometry_rcpp_wkt_envelope_geographic", (DL_FUNC) &_boostgeometry_rcpp_wkt_envelope_geographic, 1},
    {"_boostgeometry_rcpp_wkt_equals", (DL_FUNC) &_boostgeometry_rcpp_wkt_equals, 3},
    {"_boostgeometry_rcpp_wkt_perimeter_cartesian", (DL_FUNC) &_boostgeometry_rcpp_wkt_perimeter_cartesian, 1},
    {"_boostgeometry_rcpp_wkt_perimeter_spherical", (DL_FUNC) &_boostgeometry_rcpp_wkt_perimeter_spherical, 1},
    {"_boostgeometry_rcpp_wkt_perimeter_geographic", (DL_FUNC) &_boostgeometry_rcpp_wkt_perimeter_geographic, 1},
    {"_boostgeometry_rcpp_wkt_simplify", (DL_FUNC) &_boostgeometry_rcpp_wkt_simplify, 3},
    {"_boostgeometry_rcpp_wkt_unique", (DL_FUNC) &_boostgeometry_rcpp_wkt_unique, 2},
    {"_boostgeometry_rcpp_wkt_within_cartesian", (DL_FUNC) &_boostgeometry_rcpp_wkt_within_cartesian, 2},
    {"_boostgeometry_rcpp_wkt_within_spherical", (DL_FUNC) &_boostgeometry_rcpp_wkt_within_spherical, 2},
    {"_boostgeometry_rcpp_wkt_within_geographic", (DL_FUNC) &_boostgeometry_rcpp_wkt_within_geographic, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_boostgeometry(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
