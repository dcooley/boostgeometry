// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_wkt_area
Rcpp::NumericVector rcpp_wkt_area(Rcpp::List wkt, const char* strategy);
RcppExport SEXP _boostgeometry_rcpp_wkt_area(SEXP wktSEXP, SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    Rcpp::traits::input_parameter< const char* >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_area(wkt, strategy));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_centroid
Rcpp::StringVector rcpp_wkt_centroid(Rcpp::List wkt);
RcppExport SEXP _boostgeometry_rcpp_wkt_centroid(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_centroid(wkt));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_convex_hull
Rcpp::StringVector rcpp_wkt_convex_hull(Rcpp::List wkt);
RcppExport SEXP _boostgeometry_rcpp_wkt_convex_hull(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_convex_hull(wkt));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_length_cartesian
Rcpp::NumericVector rcpp_wkt_length_cartesian(Rcpp::List wkt);
RcppExport SEXP _boostgeometry_rcpp_wkt_length_cartesian(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_length_cartesian(wkt));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_length_spherical
Rcpp::NumericVector rcpp_wkt_length_spherical(Rcpp::List wkt);
RcppExport SEXP _boostgeometry_rcpp_wkt_length_spherical(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_length_spherical(wkt));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_length_geographic
Rcpp::NumericVector rcpp_wkt_length_geographic(Rcpp::List wkt);
RcppExport SEXP _boostgeometry_rcpp_wkt_length_geographic(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_length_geographic(wkt));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_num_geometries
Rcpp::NumericVector rcpp_wkt_num_geometries(Rcpp::List wkt);
RcppExport SEXP _boostgeometry_rcpp_wkt_num_geometries(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_num_geometries(wkt));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_num_interior_rings
Rcpp::NumericVector rcpp_wkt_num_interior_rings(Rcpp::List wkt);
RcppExport SEXP _boostgeometry_rcpp_wkt_num_interior_rings(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_num_interior_rings(wkt));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_num_points
Rcpp::NumericVector rcpp_wkt_num_points(Rcpp::List wkt);
RcppExport SEXP _boostgeometry_rcpp_wkt_num_points(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_num_points(wkt));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_wkt_num_segments
Rcpp::NumericVector rcpp_wkt_num_segments(Rcpp::List wkt);
RcppExport SEXP _boostgeometry_rcpp_wkt_num_segments(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_wkt_num_segments(wkt));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_boostgeometry_rcpp_wkt_area", (DL_FUNC) &_boostgeometry_rcpp_wkt_area, 2},
    {"_boostgeometry_rcpp_wkt_centroid", (DL_FUNC) &_boostgeometry_rcpp_wkt_centroid, 1},
    {"_boostgeometry_rcpp_wkt_convex_hull", (DL_FUNC) &_boostgeometry_rcpp_wkt_convex_hull, 1},
    {"_boostgeometry_rcpp_wkt_length_cartesian", (DL_FUNC) &_boostgeometry_rcpp_wkt_length_cartesian, 1},
    {"_boostgeometry_rcpp_wkt_length_spherical", (DL_FUNC) &_boostgeometry_rcpp_wkt_length_spherical, 1},
    {"_boostgeometry_rcpp_wkt_length_geographic", (DL_FUNC) &_boostgeometry_rcpp_wkt_length_geographic, 1},
    {"_boostgeometry_rcpp_wkt_num_geometries", (DL_FUNC) &_boostgeometry_rcpp_wkt_num_geometries, 1},
    {"_boostgeometry_rcpp_wkt_num_interior_rings", (DL_FUNC) &_boostgeometry_rcpp_wkt_num_interior_rings, 1},
    {"_boostgeometry_rcpp_wkt_num_points", (DL_FUNC) &_boostgeometry_rcpp_wkt_num_points, 1},
    {"_boostgeometry_rcpp_wkt_num_segments", (DL_FUNC) &_boostgeometry_rcpp_wkt_num_segments, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_boostgeometry(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
